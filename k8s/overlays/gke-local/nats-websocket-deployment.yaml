apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats-websocket-proxy
  namespace: meme-generator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats-websocket-proxy
  template:
    metadata:
      labels:
        app: nats-websocket-proxy
    spec:
      containers:
        - name: nginx
          image: nginx:alpine
          ports:
            - containerPort: 8080
              name: websocket
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nats-proxy-nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nats-proxy-nginx-config
  namespace: meme-generator
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream nats {
            server nats.messaging.svc.cluster.local:8080;
        }
        
        server {
            listen 8080;
            
            location / {
                proxy_pass http://nats;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # WebSocket specific
                proxy_read_timeout 3600s;
                proxy_send_timeout 3600s;
                
                # CORS headers
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                
                if ($request_method = 'OPTIONS') {
                    add_header 'Access-Control-Allow-Origin' '*';
                    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                    add_header 'Access-Control-Max-Age' 1728000;
                    add_header 'Content-Type' 'text/plain; charset=utf-8';
                    add_header 'Content-Length' 0;
                    return 204;
                }
            }
        }
    }